# Code4.3
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
y_CO2 = mice(y_CO2, method="mean")
install.packages("mice")
# Code4.3
library(mice)
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
y_CO2 = mice(y_CO2, method="mean")
# Code4.3
library(mice)
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
print(y_CO2)
y_CO2 = mice(y_CO2, method="mean")
# Code4.3
library(mice)
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
print(type(y_CO2))
# Code4.3
library(mice)
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
print(typeof(y_CO2))
y_CO2 = mice(y_CO2, method="mean")
install.packages("imputeTS")
# Code4.3
library("imputeTS")
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
summary(y_CO2)
# Code4.3
library("imputeTS")
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
y_CO2 = na.interpolation(y_CO2, option="linear")
summary(y_CO2)
# Code4.3
library("imputeTS")
Ryori = read.csv("../tsbook-master/CO2.csv")
y_all = ts(data = Ryori$CO2, start = c(1987,1), frequency = 12)
y = window(y_all, end = c(2014, 12))
y_CO2 = y
print(summary(y_CO2))
# NA.point = which(is.na(y_CO2))
# y_CO2[NA.point] = (y_CO2[NA.point - 1] + y_CO2[NA.point + 1]) / 2
# imputeTSパッケージを使ってna.interpolation()で補間もできる
y_CO2 = na.interpolation(y_CO2, option="linear")
summary(y_CO2)
x <- 3
x -> y
print(x)
print(y)
x <- 3
x -> y
print(x)
print(y)
vec = [1,2,3,4]
x <- 3
x -> y
print(x)
print(y)
vec = c(1,2,3,4)
mean(vec)
x <- 3
x -> y
print(x)
print(y)
vec = c(1,2,3,4)
mean(satou = vec)
x <- 3
x -> y
print(x)
print(y)
mean(z <- 1:6)
# ok
mean(z <- 1:6)
print(z)
# null reference
mean(w = 1:6)
# ok
mean(z <- 1:6)
print(z)
# null reference
mean(w <- 1:6)
print(w)
# ok
mean(z <- 1:6)
print(z)
# null reference
mean(w = 1:6)
